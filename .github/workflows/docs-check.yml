name: Documentation Check

on:
  pull_request:
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements.txt'
      - '.github/workflows/docs-check.yml'
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Required for mike versioning
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install mike  # For versioning
    
    - name: Build documentation (strict mode)
      run: |
        mkdocs build --strict --verbose
    
    - name: Check for broken links
      run: |
        pip install linkchecker
        linkchecker --config .linkcheckerrc site/ || true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: docs-build-logs
        path: |
          site/
          *.log

  validate-mermaid:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install mermaid-cli
      run: npm install -g @mermaid-js/mermaid-cli
    
    - name: Validate Mermaid diagrams
      run: |
        # Find all markdown files with mermaid code blocks
        for file in $(find docs -name "*.md" -type f); do
          if grep -q '```mermaid' "$file"; then
            echo "Checking mermaid diagrams in: $file"
            # Extract each mermaid block
            count=0
            while IFS= read -r line; do
              if [[ $line == '```mermaid' ]]; then
                count=$((count + 1))
                # Extract until closing ```
                sed -n "/^${line}$/,/^\`\`\`$/p" "$file" | sed '1d;$d' > "temp_${count}.mmd"
                if [ -s "temp_${count}.mmd" ]; then
                  # Validate the diagram
                  if ! mmdc -i "temp_${count}.mmd" -o "output_${count}.png" 2>/dev/null; then
                    echo "  ❌ Error in diagram $count"
                  else
                    echo "  ✅ Diagram $count is valid"
                  fi
                fi
              fi
            done < "$file"
          fi
        done
        # Cleanup
        rm -f temp_*.mmd output_*.png

  check-links:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Link Checker
      uses: lycheeverse/lychee-action@v1
      with:
        args: --verbose --no-progress './docs/**/*.md' --exclude-mail
        fail: false  # Don't fail on external links

  spell-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Spell Check
      uses: streetsidesoftware/cspell-action@v2
      with:
        files: 'docs/**/*.md'
        config: '.cspell.json'
        strict: false