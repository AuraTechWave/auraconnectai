# backend/modules/payroll/.github/workflows/test.yml

name: Payroll Module Tests

on:
  push:
    paths:
      - 'backend/modules/payroll/**'
      - '.github/workflows/payroll-test.yml'
  pull_request:
    paths:
      - 'backend/modules/payroll/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: payroll_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r backend/requirements.txt
        pip install -r backend/modules/payroll/requirements.txt
        pip install -r backend/modules/payroll/tests/requirements-test.txt
    
    - name: Run unit tests
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/payroll_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        cd backend/modules/payroll
        pytest tests/ -m "unit" -v --cov=. --cov-report=xml
    
    - name: Run integration tests
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/payroll_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        cd backend/modules/payroll
        pytest tests/ -m "integration" -v
    
    - name: Run e2e tests
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/payroll_test
        REDIS_URL: redis://localhost:6379/0
      run: |
        cd backend/modules/payroll
        pytest tests/ -m "e2e" -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/modules/payroll/coverage.xml
        flags: payroll
        name: payroll-coverage
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          backend/modules/payroll/tests/htmlcov/
          backend/modules/payroll/coverage.xml
  
  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install -r backend/requirements.txt
        pip install -r backend/modules/payroll/requirements.txt
        pip install -r backend/modules/payroll/tests/requirements-test.txt
    
    - name: Run performance tests
      run: |
        cd backend/modules/payroll
        pytest tests/ -m "performance" -v --benchmark-only
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: backend/modules/payroll/.benchmarks/