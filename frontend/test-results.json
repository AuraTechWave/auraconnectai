{
  "config": {
    "configFile": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/playwright.config.ts",
    "rootDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "open": "never",
          "outputFolder": "playwright-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results.json"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 5,
    "webServer": {
      "command": "npm start",
      "url": "http://localhost:3000",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "tests/smoke.spec.ts",
      "file": "tests/smoke.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Smoke Tests",
          "file": "tests/smoke.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "frontend application loads",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 1050,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-30T03:57:23.158Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "b08dced4ab0b38bf7f55-e7023142c03cc10f5edb",
              "file": "tests/smoke.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "navigation menu is accessible",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 5614,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('nav, [role=\"navigation\"], .navbar, .navigation').first()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('nav, [role=\"navigation\"], .navbar, .navigation').first()\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('nav, [role=\"navigation\"], .navbar, .navigation').first()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('nav, [role=\"navigation\"], .navbar, .navigation').first()\u001b[22m\n\n    at /Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts:27:31",
                        "location": {
                          "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                          "column": 31,
                          "line": 27
                        },
                        "snippet": "  25 |     // Look for navigation elements\n  26 |     const nav = page.locator('nav, [role=\"navigation\"], .navbar, .navigation');\n> 27 |     await expect(nav.first()).toBeVisible();\n     |                               ^\n  28 |   });\n  29 |\n  30 |   test('login page is accessible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                            "column": 31,
                            "line": 27
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('nav, [role=\"navigation\"], .navbar, .navigation').first()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('nav, [role=\"navigation\"], .navbar, .navigation').first()\u001b[22m\n\n\n  25 |     // Look for navigation elements\n  26 |     const nav = page.locator('nav, [role=\"navigation\"], .navbar, .navigation');\n> 27 |     await expect(nav.first()).toBeVisible();\n     |                               ^\n  28 |   });\n  29 |\n  30 |   test('login page is accessible', async ({ page }) => {\n    at /Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts:27:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-30T03:57:23.158Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results/tests-smoke-Smoke-Tests-navigation-menu-is-accessible-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results/tests-smoke-Smoke-Tests-navigation-menu-is-accessible-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results/tests-smoke-Smoke-Tests-navigation-menu-is-accessible-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                        "column": 31,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "b08dced4ab0b38bf7f55-b8e3e056508eb39fc9e9",
              "file": "tests/smoke.spec.ts",
              "line": 22,
              "column": 7
            },
            {
              "title": "login page is accessible",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 5645,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('input[type=\"email\"], input[name=\"email\"], #email').first()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('input[type=\"email\"], input[name=\"email\"], #email').first()\u001b[22m\n",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('input[type=\"email\"], input[name=\"email\"], #email').first()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('input[type=\"email\"], input[name=\"email\"], #email').first()\u001b[22m\n\n    at /Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts:38:38",
                        "location": {
                          "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                          "column": 38,
                          "line": 38
                        },
                        "snippet": "  36 |     const submitButton = page.locator('button[type=\"submit\"], button:has-text(\"Login\"), button:has-text(\"Sign In\")');\n  37 |     \n> 38 |     await expect(emailInput.first()).toBeVisible();\n     |                                      ^\n  39 |     await expect(passwordInput.first()).toBeVisible();\n  40 |     await expect(submitButton.first()).toBeVisible();\n  41 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                            "column": 38,
                            "line": 38
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m failed\n\nLocator:  locator('input[type=\"email\"], input[name=\"email\"], #email').first()\nExpected: visible\nReceived: <element(s) not found>\nTimeout:  5000ms\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator('input[type=\"email\"], input[name=\"email\"], #email').first()\u001b[22m\n\n\n  36 |     const submitButton = page.locator('button[type=\"submit\"], button:has-text(\"Login\"), button:has-text(\"Sign In\")');\n  37 |     \n> 38 |     await expect(emailInput.first()).toBeVisible();\n     |                                      ^\n  39 |     await expect(passwordInput.first()).toBeVisible();\n  40 |     await expect(submitButton.first()).toBeVisible();\n  41 |   });\n    at /Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts:38:38"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-30T03:57:23.164Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results/tests-smoke-Smoke-Tests-login-page-is-accessible-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results/tests-smoke-Smoke-Tests-login-page-is-accessible-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/test-results/tests-smoke-Smoke-Tests-login-page-is-accessible-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                        "column": 38,
                        "line": 38
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "b08dced4ab0b38bf7f55-10ae9fada1bb9449a0fd",
              "file": "tests/smoke.spec.ts",
              "line": 30,
              "column": 7
            },
            {
              "title": "API health check",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 320,
                      "error": {
                        "message": "Error: apiRequestContext.get: connect ECONNREFUSED 127.0.0.1:8000\nCall log:\n\u001b[2m  - → GET http://localhost:8000/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "Error: apiRequestContext.get: connect ECONNREFUSED 127.0.0.1:8000\nCall log:\n\u001b[2m  - → GET http://localhost:8000/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at /Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts:44:36",
                        "location": {
                          "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                          "column": 36,
                          "line": 44
                        },
                        "snippet": "  42 |\n  43 |   test('API health check', async ({ request }) => {\n> 44 |     const response = await request.get('http://localhost:8000/health', {\n     |                                    ^\n  45 |       failOnStatusCode: false\n  46 |     });\n  47 |     "
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                            "column": 36,
                            "line": 44
                          },
                          "message": "Error: apiRequestContext.get: connect ECONNREFUSED 127.0.0.1:8000\nCall log:\n\u001b[2m  - → GET http://localhost:8000/health\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.7339.16 Safari/537.36\u001b[22m\n\u001b[2m    - accept: */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  42 |\n  43 |   test('API health check', async ({ request }) => {\n> 44 |     const response = await request.get('http://localhost:8000/health', {\n     |                                    ^\n  45 |       failOnStatusCode: false\n  46 |     });\n  47 |     \n    at /Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts:44:36"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-30T03:57:23.166Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "/Volumes/CodeMatrix/Projects/clones/auraconnectai/frontend/e2e/tests/smoke.spec.ts",
                        "column": 36,
                        "line": 44
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "b08dced4ab0b38bf7f55-997451618f50761a8226",
              "file": "tests/smoke.spec.ts",
              "line": 43,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-08-30T03:57:19.098Z",
    "duration": 10047.692,
    "expected": 1,
    "skipped": 0,
    "unexpected": 3,
    "flaky": 0
  }
}